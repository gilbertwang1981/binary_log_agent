// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/configure.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "configure.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace vip {
namespace local {
namespace cache {
namespace proto {
class ConfigObjectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConfigObject> {
} _ConfigObject_default_instance_;

namespace protobuf_protocol_2fconfigure_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigObject, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigObject, optype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigObject, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigObject, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigObject, extra_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigObject, timestamp_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ConfigObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigObject_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "protocol/configure.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _ConfigObject_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ConfigObject_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\030protocol/configure.proto\022\031com.vip.loca"
      "l.cache.proto\"h\n\014ConfigObject\022\n\n\002ip\030\001 \001("
      "\t\022\016\n\006opType\030\002 \001(\r\022\013\n\003key\030\003 \001(\t\022\r\n\005value\030"
      "\004 \001(\t\022\r\n\005extra\030\005 \001(\t\022\021\n\ttimestamp\030\006 \001(\004b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 167);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol/configure.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_protocol_2fconfigure_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigObject::kIpFieldNumber;
const int ConfigObject::kOpTypeFieldNumber;
const int ConfigObject::kKeyFieldNumber;
const int ConfigObject::kValueFieldNumber;
const int ConfigObject::kExtraFieldNumber;
const int ConfigObject::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigObject::ConfigObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2fconfigure_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.vip.local.cache.proto.ConfigObject)
}
ConfigObject::ConfigObject(const ConfigObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    reinterpret_cast<char*>(&optype_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(optype_));
  // @@protoc_insertion_point(copy_constructor:com.vip.local.cache.proto.ConfigObject)
}

void ConfigObject::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&optype_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(optype_));
  _cached_size_ = 0;
}

ConfigObject::~ConfigObject() {
  // @@protoc_insertion_point(destructor:com.vip.local.cache.proto.ConfigObject)
  SharedDtor();
}

void ConfigObject::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigObject::descriptor() {
  protobuf_protocol_2fconfigure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2fconfigure_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigObject& ConfigObject::default_instance() {
  protobuf_protocol_2fconfigure_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigObject* ConfigObject::New(::google::protobuf::Arena* arena) const {
  ConfigObject* n = new ConfigObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigObject::Clear() {
// @@protoc_insertion_point(message_clear_start:com.vip.local.cache.proto.ConfigObject)
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&optype_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(optype_));
}

bool ConfigObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.vip.local.cache.proto.ConfigObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.vip.local.cache.proto.ConfigObject.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 opType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &optype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.vip.local.cache.proto.ConfigObject.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.vip.local.cache.proto.ConfigObject.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extra = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extra().data(), this->extra().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.vip.local.cache.proto.ConfigObject.extra"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.vip.local.cache.proto.ConfigObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.vip.local.cache.proto.ConfigObject)
  return false;
#undef DO_
}

void ConfigObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.vip.local.cache.proto.ConfigObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // uint32 opType = 2;
  if (this->optype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->optype(), output);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->key(), output);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  // string extra = 5;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.extra");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extra(), output);
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.vip.local.cache.proto.ConfigObject)
}

::google::protobuf::uint8* ConfigObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.vip.local.cache.proto.ConfigObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // uint32 opType = 2;
  if (this->optype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->optype(), target);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->key(), target);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value(), target);
  }

  // string extra = 5;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extra().data(), this->extra().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.vip.local.cache.proto.ConfigObject.extra");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extra(), target);
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->timestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.vip.local.cache.proto.ConfigObject)
  return target;
}

size_t ConfigObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.vip.local.cache.proto.ConfigObject)
  size_t total_size = 0;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string extra = 5;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extra());
  }

  // uint64 timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint32 opType = 2;
  if (this->optype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->optype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.vip.local.cache.proto.ConfigObject)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.vip.local.cache.proto.ConfigObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.vip.local.cache.proto.ConfigObject)
    MergeFrom(*source);
  }
}

void ConfigObject::MergeFrom(const ConfigObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.vip.local.cache.proto.ConfigObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.optype() != 0) {
    set_optype(from.optype());
  }
}

void ConfigObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.vip.local.cache.proto.ConfigObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigObject::CopyFrom(const ConfigObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.vip.local.cache.proto.ConfigObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigObject::IsInitialized() const {
  return true;
}

void ConfigObject::Swap(ConfigObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigObject::InternalSwap(ConfigObject* other) {
  ip_.Swap(&other->ip_);
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  extra_.Swap(&other->extra_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(optype_, other->optype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigObject::GetMetadata() const {
  protobuf_protocol_2fconfigure_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2fconfigure_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigObject

// string ip = 1;
void ConfigObject::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigObject::ip() const {
  // @@protoc_insertion_point(field_get:com.vip.local.cache.proto.ConfigObject.ip)
  return ip_.GetNoArena();
}
void ConfigObject::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.vip.local.cache.proto.ConfigObject.ip)
}
#if LANG_CXX11
void ConfigObject::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.vip.local.cache.proto.ConfigObject.ip)
}
#endif
void ConfigObject::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.vip.local.cache.proto.ConfigObject.ip)
}
void ConfigObject::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.vip.local.cache.proto.ConfigObject.ip)
}
::std::string* ConfigObject::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:com.vip.local.cache.proto.ConfigObject.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigObject::release_ip() {
  // @@protoc_insertion_point(field_release:com.vip.local.cache.proto.ConfigObject.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigObject::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:com.vip.local.cache.proto.ConfigObject.ip)
}

// uint32 opType = 2;
void ConfigObject::clear_optype() {
  optype_ = 0u;
}
::google::protobuf::uint32 ConfigObject::optype() const {
  // @@protoc_insertion_point(field_get:com.vip.local.cache.proto.ConfigObject.opType)
  return optype_;
}
void ConfigObject::set_optype(::google::protobuf::uint32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:com.vip.local.cache.proto.ConfigObject.opType)
}

// string key = 3;
void ConfigObject::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigObject::key() const {
  // @@protoc_insertion_point(field_get:com.vip.local.cache.proto.ConfigObject.key)
  return key_.GetNoArena();
}
void ConfigObject::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.vip.local.cache.proto.ConfigObject.key)
}
#if LANG_CXX11
void ConfigObject::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.vip.local.cache.proto.ConfigObject.key)
}
#endif
void ConfigObject::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.vip.local.cache.proto.ConfigObject.key)
}
void ConfigObject::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.vip.local.cache.proto.ConfigObject.key)
}
::std::string* ConfigObject::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:com.vip.local.cache.proto.ConfigObject.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigObject::release_key() {
  // @@protoc_insertion_point(field_release:com.vip.local.cache.proto.ConfigObject.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigObject::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:com.vip.local.cache.proto.ConfigObject.key)
}

// string value = 4;
void ConfigObject::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigObject::value() const {
  // @@protoc_insertion_point(field_get:com.vip.local.cache.proto.ConfigObject.value)
  return value_.GetNoArena();
}
void ConfigObject::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.vip.local.cache.proto.ConfigObject.value)
}
#if LANG_CXX11
void ConfigObject::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.vip.local.cache.proto.ConfigObject.value)
}
#endif
void ConfigObject::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.vip.local.cache.proto.ConfigObject.value)
}
void ConfigObject::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.vip.local.cache.proto.ConfigObject.value)
}
::std::string* ConfigObject::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:com.vip.local.cache.proto.ConfigObject.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigObject::release_value() {
  // @@protoc_insertion_point(field_release:com.vip.local.cache.proto.ConfigObject.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigObject::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:com.vip.local.cache.proto.ConfigObject.value)
}

// string extra = 5;
void ConfigObject::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigObject::extra() const {
  // @@protoc_insertion_point(field_get:com.vip.local.cache.proto.ConfigObject.extra)
  return extra_.GetNoArena();
}
void ConfigObject::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.vip.local.cache.proto.ConfigObject.extra)
}
#if LANG_CXX11
void ConfigObject::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.vip.local.cache.proto.ConfigObject.extra)
}
#endif
void ConfigObject::set_extra(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.vip.local.cache.proto.ConfigObject.extra)
}
void ConfigObject::set_extra(const char* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.vip.local.cache.proto.ConfigObject.extra)
}
::std::string* ConfigObject::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:com.vip.local.cache.proto.ConfigObject.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigObject::release_extra() {
  // @@protoc_insertion_point(field_release:com.vip.local.cache.proto.ConfigObject.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigObject::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:com.vip.local.cache.proto.ConfigObject.extra)
}

// uint64 timestamp = 6;
void ConfigObject::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ConfigObject::timestamp() const {
  // @@protoc_insertion_point(field_get:com.vip.local.cache.proto.ConfigObject.timestamp)
  return timestamp_;
}
void ConfigObject::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:com.vip.local.cache.proto.ConfigObject.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cache
}  // namespace local
}  // namespace vip
}  // namespace com

// @@protoc_insertion_point(global_scope)
